+++
draft = false
date = "2023-02-07T18:03:22+03:00"
lastmod = "2023-02-07T18:03:22+03:00"
title = "How I Build My Jamstack Site With Hugo, Cloudflare Pages and Git?"
slug = "my-jamstack-site-hugo-pico"
author = ["Alper"]
topics = ["Open Source"]
tags = ["Hugo", "Website", "Pico", "Jamstack", "Blog", "Kiss" ]
Image= "/images/hugo.jpg"
series = ["Theme"]
description= "In this article, I will talk about how I created this site with Hugo, Cloudflare Pages and Git and what I want to add over time, rather than the topics I want to mention."

[comments]
host = "fosstodon.org"
username = "eorus"
id = 110003800632077529

+++

For a long time, I wanted to create a site to transfer my notes and share my experiences. Two important points were both adapting to the developing [Jamstack](https://jamstack.org) trend and creating a completely self-produced theme that fits the *semantic html* structure.

Thus, at the beginning of 2023, I have set up this site generated by [Hugo](https://gohugo.io/), design was built on [Pico CSS](https://picocss.com/) and deployed from[Github](https://github.com/) with [Cloudflare Pages](https://pages.cloudflare.com) through the repository. In this article, I will talk about how I created this site with Hugo, Cloudflare Pages and Git and what I want to add over time, rather than the topics I want to mention.

First of all, my first choice for this site was that it had a very fast and readable design. I knew I wanted a static Jamstack site for maximum performance. Also, the generator had to be static for quick and easy publishing performance. Thus, the structures I used in the **generator, design and deployment** phase were formed as follows.

## Static Site Generator

I have already used Hugo for different purposes for the last three or four years. I chose it because of the comfortable development environment it provides and of course the tremendous build speed. Hugo allows me to create my posts with multi language support in a simple way. I can also control the theme components for these two languages with a simple <code>i18n</code> file. Even though I consider the needs according to the projects and make my choices related, I will probably use Hugo for my new works unless there is a different situation.

## Design

In terms of design, the framework I was going to use had to be flexible, allowing me to do everything from scratch for full customization. For this, I decided to use **Pico CSS** with dark mode automatically enabled, elegant styles for all native HTML elements, semantic structure and no classes. Since there are no use of classes in html codes such as [Tailwind CSS](https://tailwindcss.com) even using [Bootstrap](https://getbootstrap.com), it has been a very suitable structure for thematic changes in the future because I have already assigned the ones myself. [Pico CSS](https://picocss.com/) offers such nice simplicity that it allowed me to default and use Segoe UI without using any external or non-standard fonts.

## Deployment

Frankly, the easiest part of the job was deployment. There are so many good alternatives on Jamstack platforms; [Netlify](https://www.netlify.com), [Vercel](https://www.vercel.com) and Cloudflare Pages are some of the highlights. Although I have a few sites running on Netlify, I used Cloudflare Pages here for performance. Honestly, I think it's enough for a site like this.

## Workflow

All the code of the site and the theme live in a repository on Github *[see](https://github.com/eorus/alperorus)*. After I write my article with Markdown, when my editing is done and complete my checks, I send it to the repository with <code>git push</code>. As soon as Cloudflare Pages detects the change, it starts building the site and becomes live at <code>alperorus.pages.dev</code> in about 30 seconds. I have a CNAME record pointing to the pages environment that concurrently spawns in the domain <code>alperor.us</code>. In summary, in about a minute from the <code>git push</code> command, the site goes live over the domain name.

All these are **free** with ssl setup, cache feature, minified css js support and limited analytics service. Hugo already automatically generates and serves my sitemap and RSS feeds.

## Performance

My purpose in the design section with the philosophy of simplicity and readability in general. I specifically removed font icons for performance and continued with svg icons. I'll probably find a nice set and go for a general icon change at the appropriate time to ensure integrity. After the introductory articles, the site's lighthouse performance score was 100%. At the same time, I was able to see 100% again on the SEO side.

![Lighthouse Score](/images/posts/lighthouse.png)

### 512K Club

I came across the 512K Club during my research  questioning the performance. [512KB Club](https://512kb.club/) is a collection of performance-oriented web pages on the Internet. Your **Total UNCompressed** web resources must not exceed 512 KB for your website to qualify. The goal is to draw attention to today's bloated internet. To make a difference for this, the platform believes that every webmaster can contribute to this with a little bit of optimization. Simple inquiries include:

* Do you really need the extra piece of JavaScript?
* Does your WordPress site need a theme that adds lots of functionality youâ€™re never going to use?
* Do you really need those large-size custom fonts?
* Are your images optimized for the web?

Frankly, I also think that this is necessary for a sustainable internet. The 512K Club would like to see the *waterfall* tab in the GTMetrix scan of the site to see this metric. In the early stages of the design, I was able to reach the orange area, that is, under 250K. However, thanks to my recent edits and optimizations, I have reached **uncompressed 87KB** for the entire site. Even the compressed size is 18KB :) which is quite pleasing. The green zone badge at the bottom of the site is important for [the value of doing hard work](/en/posts/doing-hard-things) and what it teaches.

![GTMetrix Score](/images/posts/gtmetrix.png)

### To do list

At the end of the article, I would like to make notes for a reminder. This will be a list of what I can add or change to the site from now on.

* Site-wide SVG icon set
* A new listing template for Taxonomy
* Hugo data cvs loop for citations
* Edit top spacing
* Replace Hugo partial files with cached
* Which commenting system?

If you have any feedback about the theme that is missing or what can be done, you can do it from the [contact](/contact/) page. Thanks for reading.
