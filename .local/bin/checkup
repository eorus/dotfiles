
#!/bin/sh
# ~/.local/bin/checkup
# Check for package updates (official + AUR) using sudo-askpass with dmenu

# Set SUDO_ASKPASS to dmenu password prompt
export SUDO_ASKPASS="$HOME/.local/bin/dmenupass"

# Initial notification
notify-send "📦 Checking for updates..." "Fetching package lists..."

# Sync official package database
if ! sudo -A pacman -Sy --noconfirm; then
    notify-send "⚠️ Error" "Failed to sync pacman database. Check your internet or pacman status."
    exit 1
fi

# Check for official package updates
official_updates=$(pacman -Qu | grep -v "\[ignored\]")

# Check for AUR package updates
aur_updates=$(yay -Qua 2>/dev/null)

# Function to prepare notification text
prepare_summary() {
    local updates="$1"
    local count=$(echo "$updates" | wc -l)
    if [ "$count" -eq 0 ]; then
        echo ""
        return
    fi

    # Show up to 5 updates for brevity
    local summary=$(echo "$updates" | head -5)
    local extra=""
    if [ "$count" -gt 5 ]; then
        extra="…and $((count - 5)) more"
    fi
    echo "$summary $extra"
}

# Prepare summaries
official_summary=$(prepare_summary "$official_updates")
aur_summary=$(prepare_summary "$aur_updates")

# Compose final message
message=""
[ -n "$official_summary" ] && message="📦 Official updates:\n$official_summary"
[ -n "$aur_summary" ] && \
    message="$([ -n "$message" ] && echo "$message\n\n")🛠 AUR updates:\n$aur_summary"

# Send notification
if [ -n "$message" ]; then
    total_count=$(( $(echo "$official_updates" | wc -l) + $(echo "$aur_updates" | wc -l) ))
    notify-send "🎁 $total_count Updates Available" "$message"
else
    notify-send "📦 Up to Date" "No new packages available (official or AUR)."
fi
